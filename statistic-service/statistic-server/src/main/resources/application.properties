server.port=9090

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect
spring.jpa.properties.hibernate.format_sql=true
spring.sql.init.mode=always

#---
#logging.level.org.springframework.orm.jpa=INFO
#logging.level.org.springframework.transaction=INFO
#logging.level.org.springframework.transaction.interceptor=TRACE
#logging.level.org.springframework.orm.jpa.JpaTransactionManager=DEBUG

#---
spring.config.activate.on-profile=default
spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.database=postgresql
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/stats}
spring.datasource.username=${POSTGRES_USER:explorer}
spring.datasource.password=${POSTGRES_PASSWORD:iamroot}

#---
spring.config.activate.on-profile=ci,test
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:stats
spring.datasource.username=test
spring.datasource.password=test

#---
# spring.jpa.properties.javax.persistence.schema-generation.scripts.action=drop-and-create

# spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=AutoSchema.sql
# spring.jpa.properties.javax.persistence.schema-generation.scripts.create-source=metadata

# spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-target=AutoSchema.sql
# spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-source=metadata
